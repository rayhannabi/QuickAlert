//
//  RNAlertSymbol.m
//  
//
//  Created by Rayhan on 6/23/18.
//  Copyright Â© 2018 Rayhan Janam. All rights reserved.
//
//  Generated by PaintCode
//  http://www.paintcodeapp.com
//

#import "RNAlertSymbol.h"


@implementation RNAlertSymbol

#pragma mark Cache

static UIColor* _gray = nil;

#pragma mark Initialization

+ (void)initialize
{
    // Colors Initialization
    _gray = [UIColor colorWithRed: 0.5 green: 0.5 blue: 0.5 alpha: 1];

}

#pragma mark Colors

+ (UIColor*)gray { return _gray; }

#pragma mark Drawing Methods

+ (void)drawCheckMarkWithFrame: (CGRect)frame
{

    //// OvalBorder Drawing
    UIBezierPath* ovalBorderPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(CGRectGetMinX(frame) + floor(frame.size.width * 0.10000) + 0.5, CGRectGetMinY(frame) + floor(frame.size.height * 0.10000) + 0.5, floor(frame.size.width * 0.90000) - floor(frame.size.width * 0.10000), floor(frame.size.height * 0.90000) - floor(frame.size.height * 0.10000))];
    [RNAlertSymbol.gray setStroke];
    ovalBorderPath.lineWidth = 3;
    [ovalBorderPath stroke];


    //// BezierCheckmark Drawing
    UIBezierPath* bezierCheckmarkPath = [UIBezierPath bezierPath];
    [bezierCheckmarkPath moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.24000 * frame.size.width, CGRectGetMinY(frame) + 0.46667 * frame.size.height)];
    [bezierCheckmarkPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.45333 * frame.size.width, CGRectGetMinY(frame) + 0.65333 * frame.size.height)];
    [bezierCheckmarkPath addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.74667 * frame.size.width, CGRectGetMinY(frame) + 0.36000 * frame.size.height)];
    [RNAlertSymbol.gray setStroke];
    bezierCheckmarkPath.lineWidth = 3;
    [bezierCheckmarkPath stroke];
}

+ (void)drawExclamationMarkWithFrame: (CGRect)frame
{

    //// OvalBorder Drawing
    UIBezierPath* ovalBorderPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(CGRectGetMinX(frame) + floor(frame.size.width * 0.10000) + 0.5, CGRectGetMinY(frame) + floor(frame.size.height * 0.10000) + 0.5, floor(frame.size.width * 0.90000) - floor(frame.size.width * 0.10000), floor(frame.size.height * 0.90000) - floor(frame.size.height * 0.10000))];
    [RNAlertSymbol.gray setStroke];
    ovalBorderPath.lineWidth = 3;
    [ovalBorderPath stroke];


    //// OvalDot Drawing
    UIBezierPath* ovalDotPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(CGRectGetMinX(frame) + floor(frame.size.width * 0.44667) + 0.5, CGRectGetMinY(frame) + floor(frame.size.height * 0.66000) + 0.5, floor(frame.size.width * 0.53333 + 0.5) - floor(frame.size.width * 0.44667) - 0.5, floor(frame.size.height * 0.74667 + 0.5) - floor(frame.size.height * 0.66000) - 0.5)];
    [RNAlertSymbol.gray setFill];
    [ovalDotPath fill];


    //// RectangleBar Drawing
    UIBezierPath* rectangleBarPath = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(frame) + floor(frame.size.width * 0.46667 + 0.5), CGRectGetMinY(frame) + floor(frame.size.height * 0.26667 + 0.5), floor(frame.size.width * 0.52000 + 0.5) - floor(frame.size.width * 0.46667 + 0.5), floor(frame.size.height * 0.60000 + 0.5) - floor(frame.size.height * 0.26667 + 0.5))];
    [RNAlertSymbol.gray setFill];
    [rectangleBarPath fill];
}

@end
